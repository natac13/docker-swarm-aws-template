{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Docker Swarm setup.",
  "Conditions": {
    "CreateLogResources": {
      "Fn::Equals": [
        {
          "Ref": "EnableCloudWatchLogs"
        },
        "yes"
      ]
    },
    "HasOnly2AZs": {
      "Fn::Equals": [
        {
          "Fn::FindInMap": [
            "AWSRegion2AZ",
            {
              "Ref": "AWS::Region"
            },
            "NumAZs"
          ]
        },
        "2"
      ]
    },
    "LambdaSupported": {
      "Fn::Equals": [
        {
          "Fn::FindInMap": [
            "AWSRegion2AZ",
            {
              "Ref": "AWS::Region"
            },
            "LambdaSupport"
          ]
        },
        "yes"
      ]
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Swarm Size"
          },
          "Parameters": [
            "ManagerSize",
            "ClusterSize"
          ]
        },
        {
          "Label": {
            "default": "Swarm Properties"
          },
          "Parameters": [
            "KeyName",
            "EnableCloudWatchLogs"
          ]
        },
        {
          "Label": {
            "default": "Swarm Manager Properties"
          },
          "Parameters": [
            "ManagerInstanceType",
            "ManagerDiskSize",
            "ManagerDiskType"
          ]
        },
        {
          "Label": {
            "default": "Swarm Worker Properties"
          },
          "Parameters": [
            "InstanceType",
            "WorkerDiskSize",
            "WorkerDiskType"
          ]
        }
      ],
      "ParameterLabels": {
        "ClusterSize": {
          "default": "Number of Swarm worker nodes?"
        },
        "EnableCloudWatchLogs": {
          "default": "Use Cloudwatch for container logging?"
        },
        "EnableSystemPrune": {
          "default": "Enable daily resource cleanup?"
        },
        "InstanceType": {
          "default": "Agent worker instance type?"
        },
        "KeyName": {
          "default": "Which SSH key to use?"
        },
        "ManagerDiskSize": {
          "default": "Manager ephemeral storage volume size?"
        },
        "ManagerDiskType": {
          "default": "Manager ephemeral storage volume type"
        },
        "ManagerInstanceType": {
          "default": "Swarm manager instance type?"
        },
        "ManagerSize": {
          "default": "Number of Swarm managers?"
        },
        "WorkerDiskSize": {
          "default": "Worker ephemeral storage volume size?"
        },
        "WorkerDiskType": {
          "default": "Worker ephemeral storage volume type"
        }
      }
    },
    "AWS::CloudFormation::Designer": {
      "0b630a3e-8b47-4876-bc52-7b0c367e0c8f": {
        "size": {
          "width": 1040,
          "height": 1000
        },
        "position": {
          "x": 430,
          "y": 80
        },
        "z": 0,
        "embeds": [
          "06906175-e554-4768-8cb5-547401eceadd",
          "5bc5d03a-a523-4c79-a0da-a84c6f65ed7d",
          "1bd90a7c-409f-4ae2-a8ea-884184de0a15",
          "b5b0775b-3d32-40f8-a6bf-c2b0455895d6",
          "829c36b5-fc86-4dc7-8cf1-9a9c84bd5151",
          "7d748840-94c2-409e-a76b-e68d416e46bf",
          "bc22286e-07bb-426e-8429-46c6227ec606"
        ]
      },
      "7d748840-94c2-409e-a76b-e68d416e46bf": {
        "size": {
          "width": 430,
          "height": 390
        },
        "position": {
          "x": 460,
          "y": 130
        },
        "z": 1,
        "parent": "0b630a3e-8b47-4876-bc52-7b0c367e0c8f",
        "embeds": [
          "ff48ecc5-209e-49a4-9e81-602253cc6e8e",
          "7ac1f66d-0463-4b9c-a840-6cdb8a562d7a",
          "84b78ee9-063c-4af8-af5a-812cf0ba1ed1"
        ],
        "dependson": [
          "0b630a3e-8b47-4876-bc52-7b0c367e0c8f"
        ]
      },
      "84b78ee9-063c-4af8-af5a-812cf0ba1ed1": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 560,
          "y": 210
        },
        "z": 2,
        "parent": "7d748840-94c2-409e-a76b-e68d416e46bf",
        "embeds": [],
        "iscontainedinside": [
          "7d748840-94c2-409e-a76b-e68d416e46bf",
          "7d748840-94c2-409e-a76b-e68d416e46bf",
          "7d748840-94c2-409e-a76b-e68d416e46bf",
          "7d748840-94c2-409e-a76b-e68d416e46bf",
          "7d748840-94c2-409e-a76b-e68d416e46bf"
        ],
        "dependson": [
          "7ac1f66d-0463-4b9c-a840-6cdb8a562d7a"
        ]
      },
      "e5d473f6-1ff8-4f9b-89e6-723978b05dda": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 140,
          "y": 450
        },
        "z": 0,
        "embeds": [],
        "dependson": [
          "0b630a3e-8b47-4876-bc52-7b0c367e0c8f"
        ]
      },
      "e9c77833-dd43-47ab-86c9-e99c6a6cd34a": {
        "source": {
          "id": "0b630a3e-8b47-4876-bc52-7b0c367e0c8f"
        },
        "target": {
          "id": "e5d473f6-1ff8-4f9b-89e6-723978b05dda"
        },
        "z": 0
      },
      "ff48ecc5-209e-49a4-9e81-602253cc6e8e": {
        "size": {
          "width": 150,
          "height": 140
        },
        "position": {
          "x": 720,
          "y": 160
        },
        "z": 2,
        "parent": "7d748840-94c2-409e-a76b-e68d416e46bf",
        "embeds": [],
        "dependson": [
          "0b630a3e-8b47-4876-bc52-7b0c367e0c8f"
        ]
      },
      "7ac1f66d-0463-4b9c-a840-6cdb8a562d7a": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 790,
          "y": 450
        },
        "z": 2,
        "parent": "7d748840-94c2-409e-a76b-e68d416e46bf",
        "embeds": [],
        "dependson": [
          "e9c77833-dd43-47ab-86c9-e99c6a6cd34a",
          "ff48ecc5-209e-49a4-9e81-602253cc6e8e",
          "e5d473f6-1ff8-4f9b-89e6-723978b05dda"
        ]
      },
      "6d87f156-f7b4-4d24-82bb-824b67d056c9": {
        "source": {
          "id": "ff48ecc5-209e-49a4-9e81-602253cc6e8e"
        },
        "target": {
          "id": "7d748840-94c2-409e-a76b-e68d416e46bf"
        },
        "z": 2
      },
      "bc22286e-07bb-426e-8429-46c6227ec606": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 1280,
          "y": 120
        },
        "z": 1,
        "parent": "0b630a3e-8b47-4876-bc52-7b0c367e0c8f",
        "embeds": [],
        "iscontainedinside": [
          "0b630a3e-8b47-4876-bc52-7b0c367e0c8f",
          "0b630a3e-8b47-4876-bc52-7b0c367e0c8f",
          "0b630a3e-8b47-4876-bc52-7b0c367e0c8f",
          "0b630a3e-8b47-4876-bc52-7b0c367e0c8f",
          "0b630a3e-8b47-4876-bc52-7b0c367e0c8f"
        ]
      },
      "829c36b5-fc86-4dc7-8cf1-9a9c84bd5151": {
        "size": {
          "width": 320,
          "height": 390
        },
        "position": {
          "x": 940,
          "y": 150
        },
        "z": 1,
        "parent": "0b630a3e-8b47-4876-bc52-7b0c367e0c8f",
        "embeds": [
          "2c213b79-ad60-48f3-8e59-c0dd345a7666"
        ],
        "dependson": [
          "0b630a3e-8b47-4876-bc52-7b0c367e0c8f"
        ]
      },
      "b5b0775b-3d32-40f8-a6bf-c2b0455895d6": {
        "size": {
          "width": 420,
          "height": 420
        },
        "position": {
          "x": 470,
          "y": 570
        },
        "z": 1,
        "parent": "0b630a3e-8b47-4876-bc52-7b0c367e0c8f",
        "embeds": [
          "ef9c5f98-6fff-499c-99dc-717ae8b9d930"
        ],
        "dependson": [
          "0b630a3e-8b47-4876-bc52-7b0c367e0c8f"
        ]
      },
      "1bd90a7c-409f-4ae2-a8ea-884184de0a15": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 1380,
          "y": 120
        },
        "z": 1,
        "parent": "0b630a3e-8b47-4876-bc52-7b0c367e0c8f",
        "embeds": [],
        "dependson": [
          "0b630a3e-8b47-4876-bc52-7b0c367e0c8f"
        ]
      },
      "5bc5d03a-a523-4c79-a0da-a84c6f65ed7d": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 1280,
          "y": 260
        },
        "z": 1,
        "parent": "0b630a3e-8b47-4876-bc52-7b0c367e0c8f",
        "embeds": [],
        "iscontainedinside": [
          "0b630a3e-8b47-4876-bc52-7b0c367e0c8f",
          "0b630a3e-8b47-4876-bc52-7b0c367e0c8f",
          "0b630a3e-8b47-4876-bc52-7b0c367e0c8f",
          "0b630a3e-8b47-4876-bc52-7b0c367e0c8f",
          "0b630a3e-8b47-4876-bc52-7b0c367e0c8f"
        ]
      },
      "06906175-e554-4768-8cb5-547401eceadd": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 1380,
          "y": 240
        },
        "z": 1,
        "parent": "0b630a3e-8b47-4876-bc52-7b0c367e0c8f",
        "embeds": [],
        "dependson": [
          "0b630a3e-8b47-4876-bc52-7b0c367e0c8f"
        ]
      },
      "6e6d3b3c-624a-4849-a78c-f9f28a5e0b74": {
        "source": {
          "id": "ff48ecc5-209e-49a4-9e81-602253cc6e8e"
        },
        "target": {
          "id": "829c36b5-fc86-4dc7-8cf1-9a9c84bd5151"
        },
        "z": 2
      },
      "cd0e7912-d672-4611-8b90-2a84250ccb3e": {
        "source": {
          "id": "ff48ecc5-209e-49a4-9e81-602253cc6e8e"
        },
        "target": {
          "id": "b5b0775b-3d32-40f8-a6bf-c2b0455895d6"
        },
        "z": 2
      },
      "2c213b79-ad60-48f3-8e59-c0dd345a7666": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 1070,
          "y": 290
        },
        "z": 2,
        "parent": "829c36b5-fc86-4dc7-8cf1-9a9c84bd5151",
        "embeds": [],
        "iscontainedinside": [
          "829c36b5-fc86-4dc7-8cf1-9a9c84bd5151",
          "829c36b5-fc86-4dc7-8cf1-9a9c84bd5151",
          "829c36b5-fc86-4dc7-8cf1-9a9c84bd5151"
        ],
        "dependson": [
          "7ac1f66d-0463-4b9c-a840-6cdb8a562d7a"
        ]
      },
      "ef9c5f98-6fff-499c-99dc-717ae8b9d930": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 660,
          "y": 750
        },
        "z": 2,
        "parent": "b5b0775b-3d32-40f8-a6bf-c2b0455895d6",
        "embeds": [],
        "iscontainedinside": [
          "b5b0775b-3d32-40f8-a6bf-c2b0455895d6",
          "b5b0775b-3d32-40f8-a6bf-c2b0455895d6"
        ],
        "dependson": [
          "7ac1f66d-0463-4b9c-a840-6cdb8a562d7a"
        ]
      },
      "2e17fa28-decc-4f3a-bc37-9d564977c6df": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 260,
          "y": 640
        },
        "z": 0
      },
      "0cb1bd8b-f9d4-4db2-9208-0a73c8bcebdd": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 260,
          "y": 760
        },
        "z": 0
      }
    }
  },
  "Resources": {
    "Vpc": {
      "Properties": {
        "CidrBlock": {
          "Fn::FindInMap": [
            "VpcCidrs",
            "vpc",
            "cidr"
          ]
        },
        "EnableDnsHostnames": "true",
        "EnableDnsSupport": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "VPC"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::EC2::VPC",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "0b630a3e-8b47-4876-bc52-7b0c367e0c8f"
        }
      }
    },
    "ManagerInstance1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {
          "Ref": "ManagerInstanceType"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionArch2AMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Arch",
                {
                  "Ref": "ManagerInstanceType"
                },
                "Arch"
              ]
            }
          ]
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "NetworkInterfaces": [
          {
            "GroupSet": [
              {
                "Ref": "WebServerSecurityGroup"
              },
              {
                "Ref": "ManagerVpcSG"
              },
              {
                "Ref": "SwarmWideSG"
              }
            ],
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0",
            "DeleteOnTermination": "false"
          },
          {
            "SubnetId": {
              "Ref": "PubSubnetAz1"
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                "\n"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "84b78ee9-063c-4af8-af5a-812cf0ba1ed1"
        }
      },
      "DependsOn": [
        "PublicRouteViaIgw"
      ]
    },
    "ManagerInstance2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {
          "Ref": "ManagerInstanceType"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionArch2AMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Arch",
                {
                  "Ref": "ManagerInstanceType"
                },
                "Arch"
              ]
            }
          ]
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "NetworkInterfaces": [
          {
            "GroupSet": [
              {
                "Ref": "WebServerSecurityGroup"
              },
              {
                "Ref": "ManagerVpcSG"
              },
              {
                "Ref": "SwarmWideSG"
              }
            ],
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0",
            "DeleteOnTermination": "false"
          },
          {
            "SubnetId": {
              "Ref": "PubSubnetAz2"
            }
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "2c213b79-ad60-48f3-8e59-c0dd345a7666"
        }
      },
      "DependsOn": [
        "PublicRouteViaIgw"
      ]
    },
    "ManagerInstance3": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {
          "Ref": "ManagerInstanceType"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionArch2AMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Arch",
                {
                  "Ref": "ManagerInstanceType"
                },
                "Arch"
              ]
            }
          ]
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "NetworkInterfaces": [
          {
            "GroupSet": [
              {
                "Ref": "WebServerSecurityGroup"
              },
              {
                "Ref": "ManagerVpcSG"
              },
              {
                "Ref": "SwarmWideSG"
              }
            ],
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0",
            "DeleteOnTermination": "false"
          },
          {
            "SubnetId": {
              "Ref": "PubSubnetAz3"
            }
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "ef9c5f98-6fff-499c-99dc-717ae8b9d930"
        }
      },
      "DependsOn": [
        "PublicRouteViaIgw"
      ]
    },
    "InternetGateway": {
      "DependsOn": "Vpc",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "IGW"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::EC2::InternetGateway",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "e5d473f6-1ff8-4f9b-89e6-723978b05dda"
        }
      }
    },
    "AttachGateway": {
      "DependsOn": [
        "Vpc",
        "InternetGateway"
      ],
      "Properties": {
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        },
        "VpcId": {
          "Ref": "Vpc"
        }
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "e9c77833-dd43-47ab-86c9-e99c6a6cd34a"
        }
      }
    },
    "RouteViaIgw": {
      "DependsOn": [
        "Vpc"
      ],
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "RT"
                ]
              ]
            }
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      },
      "Type": "AWS::EC2::RouteTable",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "ff48ecc5-209e-49a4-9e81-602253cc6e8e"
        }
      }
    },
    "PublicRouteViaIgw": {
      "DependsOn": [
        "AttachGateway",
        "RouteViaIgw",
        "InternetGateway"
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        },
        "RouteTableId": {
          "Ref": "RouteViaIgw"
        }
      },
      "Type": "AWS::EC2::Route",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "7ac1f66d-0463-4b9c-a840-6cdb8a562d7a"
        }
      }
    },
    "PubSubnet1RouteTableAssociation": {
      "DependsOn": [
        "PubSubnetAz1",
        "RouteViaIgw"
      ],
      "Properties": {
        "RouteTableId": {
          "Ref": "RouteViaIgw"
        },
        "SubnetId": {
          "Ref": "PubSubnetAz1"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "6d87f156-f7b4-4d24-82bb-824b67d056c9"
        }
      }
    },
    "PubSubnet2RouteTableAssociation": {
      "DependsOn": [
        "PubSubnetAz2",
        "RouteViaIgw"
      ],
      "Properties": {
        "RouteTableId": {
          "Ref": "RouteViaIgw"
        },
        "SubnetId": {
          "Ref": "PubSubnetAz2"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "6e6d3b3c-624a-4849-a78c-f9f28a5e0b74"
        }
      }
    },
    "PubSubnet3RouteTableAssociation": {
      "DependsOn": [
        "PubSubnetAz3",
        "RouteViaIgw"
      ],
      "Properties": {
        "RouteTableId": {
          "Ref": "RouteViaIgw"
        },
        "SubnetId": {
          "Ref": "PubSubnetAz3"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "cd0e7912-d672-4611-8b90-2a84250ccb3e"
        }
      }
    },
    "WebServerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc"
        },
        "GroupDescription": "Allow access from HTTP/HTTPS and SSH traffic",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "SSHLocation"
            }
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "bc22286e-07bb-426e-8429-46c6227ec606"
        }
      }
    },
    "PubSubnetAz1": {
      "DependsOn": [
        "Vpc"
      ],
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            {
              "Fn::FindInMap": [
                "AWSRegion2AZ",
                {
                  "Ref": "AWS::Region"
                },
                "AZ0"
              ]
            },
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "CidrBlock": {
          "Fn::FindInMap": [
            "VpcCidrs",
            "pubsubnet1",
            "cidr"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Subnet1"
                ]
              ]
            }
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      },
      "Type": "AWS::EC2::Subnet",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "7d748840-94c2-409e-a76b-e68d416e46bf"
        }
      }
    },
    "PubSubnetAz2": {
      "DependsOn": [
        "Vpc"
      ],
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            {
              "Fn::FindInMap": [
                "AWSRegion2AZ",
                {
                  "Ref": "AWS::Region"
                },
                "AZ1"
              ]
            },
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "CidrBlock": {
          "Fn::FindInMap": [
            "VpcCidrs",
            "pubsubnet2",
            "cidr"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Subnet2"
                ]
              ]
            }
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      },
      "Type": "AWS::EC2::Subnet",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "829c36b5-fc86-4dc7-8cf1-9a9c84bd5151"
        }
      }
    },
    "PubSubnetAz3": {
      "DependsOn": [
        "Vpc"
      ],
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            {
              "Fn::FindInMap": [
                "AWSRegion2AZ",
                {
                  "Ref": "AWS::Region"
                },
                "AZ2"
              ]
            },
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "CidrBlock": {
          "Fn::FindInMap": [
            "VpcCidrs",
            "pubsubnet3",
            "cidr"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Subnet3"
                ]
              ]
            }
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      },
      "Type": "AWS::EC2::Subnet",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "b5b0775b-3d32-40f8-a6bf-c2b0455895d6"
        }
      }
    },
    "SwarmWideSG": {
      "DependsOn": "Vpc",
      "Properties": {
        "GroupDescription": "Swarm wide access",
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::FindInMap": [
                "VpcCidrs",
                "vpc",
                "cidr"
              ]
            },
            "FromPort": "0",
            "IpProtocol": "-1",
            "ToPort": "65535"
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      },
      "Type": "AWS::EC2::SecurityGroup",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "1bd90a7c-409f-4ae2-a8ea-884184de0a15"
        }
      }
    },
    "ManagerVpcSG": {
      "DependsOn": "NodeVpcSG",
      "Properties": {
        "GroupDescription": "Manager SecurityGroup",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "22",
            "IpProtocol": "tcp",
            "ToPort": "22"
          },
          {
            "IpProtocol": "50",
            "SourceSecurityGroupId": {
              "Fn::GetAtt": [
                "NodeVpcSG",
                "GroupId"
              ]
            }
          },
          {
            "FromPort": "2377",
            "IpProtocol": "tcp",
            "SourceSecurityGroupId": {
              "Fn::GetAtt": [
                "NodeVpcSG",
                "GroupId"
              ]
            },
            "ToPort": "2377"
          },
          {
            "FromPort": "4789",
            "IpProtocol": "udp",
            "SourceSecurityGroupId": {
              "Fn::GetAtt": [
                "NodeVpcSG",
                "GroupId"
              ]
            },
            "ToPort": "4789"
          },
          {
            "FromPort": "7946",
            "IpProtocol": "tcp",
            "SourceSecurityGroupId": {
              "Fn::GetAtt": [
                "NodeVpcSG",
                "GroupId"
              ]
            },
            "ToPort": "7946"
          },
          {
            "FromPort": "7946",
            "IpProtocol": "udp",
            "SourceSecurityGroupId": {
              "Fn::GetAtt": [
                "NodeVpcSG",
                "GroupId"
              ]
            },
            "ToPort": "7946"
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      },
      "Type": "AWS::EC2::SecurityGroup",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "5bc5d03a-a523-4c79-a0da-a84c6f65ed7d"
        }
      }
    },
    "NodeVpcSG": {
      "DependsOn": "Vpc",
      "Properties": {
        "GroupDescription": "Node SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "8",
            "IpProtocol": "icmp",
            "ToPort": "0"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "IpProtocol": "50"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "0",
            "IpProtocol": "udp",
            "ToPort": "65535"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "0",
            "IpProtocol": "tcp",
            "ToPort": "2374"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "2376",
            "IpProtocol": "tcp",
            "ToPort": "65535"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::FindInMap": [
                "VpcCidrs",
                "vpc",
                "cidr"
              ]
            },
            "FromPort": "0",
            "IpProtocol": "-1",
            "ToPort": "65535"
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      },
      "Type": "AWS::EC2::SecurityGroup",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "06906175-e554-4768-8cb5-547401eceadd"
        }
      }
    },
    "ManagerAsg": {
      "CreationPolicy": {
        "ResourceSignal": {
          "Count": {
            "Ref": "ManagerSize"
          },
          "Timeout": "PT20M"
        }
      },
      "DependsOn": [
        "PubSubnetAz1",
        "PubSubnetAz2",
        "PubSubnetAz3",
        "ExternalLoadBalancer"
      ],
      "Properties": {
        "DesiredCapacity": {
          "Ref": "ManagerSize"
        },
        "HealthCheckGracePeriod": 300,
        "HealthCheckType": "ELB",
        "LaunchConfigurationName": {
          "Ref": "ManagerLaunchConfig18092ceaws1"
        },
        "LoadBalancerNames": [
          {
            "Ref": "ExternalLoadBalancer"
          }
        ],
        "MaxSize": 6,
        "MetricsCollection": [
          {
            "Granularity": "1Minute"
          }
        ],
        "MinSize": 0,
        "Tags": [
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Manager"
                ]
              ]
            }
          },
          {
            "Key": "swarm-node-type",
            "PropagateAtLaunch": true,
            "Value": "manager"
          },
          {
            "Key": "swarm-stack-id",
            "PropagateAtLaunch": true,
            "Value": {
              "Ref": "AWS::StackId"
            }
          },
          {
            "Key": "DOCKER_VERSION",
            "PropagateAtLaunch": true,
            "Value": {
              "Fn::FindInMap": [
                "DockerEnvironment",
                "version",
                "docker"
              ]
            }
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Fn::If": [
              "HasOnly2AZs",
              {
                "Fn::Join": [
                  ",",
                  [
                    {
                      "Ref": "PubSubnetAz1"
                    },
                    {
                      "Ref": "PubSubnetAz2"
                    }
                  ]
                ]
              },
              {
                "Fn::Join": [
                  ",",
                  [
                    {
                      "Ref": "PubSubnetAz1"
                    },
                    {
                      "Ref": "PubSubnetAz2"
                    },
                    {
                      "Ref": "PubSubnetAz3"
                    }
                  ]
                ]
              }
            ]
          }
        ]
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MaxBatchSize": "1",
          "MinInstancesInService": {
            "Ref": "ManagerSize"
          },
          "PauseTime": "PT20M",
          "WaitOnResourceSignals": "true"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "2e17fa28-decc-4f3a-bc37-9d564977c6df"
        }
      }
    },
    "ASASG4E12Y": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {},
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "0cb1bd8b-f9d4-4db2-9208-0a73c8bcebdd"
        }
      }
    }
  },
  "Parameters": {
    "ManagerInstanceType": {
      "Description": "Docker Swarm Manager EC2 instance type",
      "Type": "String",
      "Default": "t3a.small",
      "AllowedValues": [
        "t1.micro",
        "t2.nano",
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "t3.nano",
        "t3.micro",
        "t3.small",
        "t3.medium",
        "t3.large",
        "t3.xlarge",
        "t3.2xlarge",
        "t3a.nano",
        "t3a.micro",
        "t3a.small",
        "t3a.medium",
        "t3a.large",
        "t3a.xlarge",
        "t3a.2xlarge",
        "m1.small",
        "m1.medium",
        "m1.large",
        "m1.xlarge",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "g2.2xlarge",
        "g2.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "cr1.8xlarge",
        "cc2.8xlarge",
        "cg1.4xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "WorkerInstanceType": {
      "Description": "Docker Swarm Worker EC2 instance type",
      "Type": "String",
      "Default": "t3a.small",
      "AllowedValues": [
        "t1.micro",
        "t2.nano",
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "t3.nano",
        "t3.micro",
        "t3.small",
        "t3.medium",
        "t3.large",
        "t3.xlarge",
        "t3.2xlarge",
        "t3a.nano",
        "t3a.micro",
        "t3a.small",
        "t3a.medium",
        "t3a.large",
        "t3a.xlarge",
        "t3a.2xlarge",
        "m1.small",
        "m1.medium",
        "m1.large",
        "m1.xlarge",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "KeyName": {
      "Description": "Name of an EC2 KeyPair to enable SSH access to the instance.",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "SSHLocation": {
      "Description": " The IP address range that can be used to access the web server using SSH.",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "ClusterSize": {
      "Default": "5",
      "Description": "Number of worker nodes in the Swarm (0-1000).",
      "MaxValue": "1000",
      "MinValue": "0",
      "Type": "Number"
    },
    "EnableCloudWatchLogs": {
      "AllowedValues": [
        "no",
        "yes"
      ],
      "Default": "yes",
      "Description": "Send all Container logs to CloudWatch",
      "Type": "String"
    },
    "EnableSystemPrune": {
      "AllowedValues": [
        "no",
        "yes"
      ],
      "Default": "no",
      "Description": "Cleans up unused images, containers, networks and volumes",
      "Type": "String"
    },
    "ManagerDiskSize": {
      "Default": "20",
      "Description": "Size of Manager's ephemeral storage volume in GiB",
      "MaxValue": "1024",
      "MinValue": "20",
      "Type": "Number"
    },
    "ManagerDiskType": {
      "AllowedValues": [
        "standard",
        "gp2"
      ],
      "Default": "standard",
      "Description": "Manager ephemeral storage volume type",
      "Type": "String"
    },
    "ManagerSize": {
      "AllowedValues": [
        "1",
        "3",
        "5"
      ],
      "Default": "3",
      "Description": "Number of Swarm manager nodes (1, 3, 5)",
      "Type": "Number"
    },
    "WorkerDiskSize": {
      "Default": "20",
      "Description": "Size of Workers's ephemeral storage volume in GiB",
      "MaxValue": "1024",
      "MinValue": "20",
      "Type": "Number"
    },
    "WorkerDiskType": {
      "AllowedValues": [
        "standard",
        "gp2"
      ],
      "Default": "standard",
      "Description": "Worker ephemeral storage volume type",
      "Type": "String"
    }
  },
  "Mappings": {
    "AWSInstanceType2Arch": {
      "t1.micro": {
        "Arch": "HVM64"
      },
      "t2.nano": {
        "Arch": "HVM64"
      },
      "t2.micro": {
        "Arch": "HVM64"
      },
      "t2.small": {
        "Arch": "HVM64"
      },
      "t2.medium": {
        "Arch": "HVM64"
      },
      "t2.large": {
        "Arch": "HVM64"
      },
      "t3a.nano": {
        "Arch": "HVM64"
      },
      "t3.micro": {
        "Arch": "HVM64"
      },
      "t3.small": {
        "Arch": "HVM64"
      },
      "t3.medium": {
        "Arch": "HVM64"
      },
      "t3.large": {
        "Arch": "HVM64"
      },
      "t3.xlarge": {
        "Arch": "HVM64"
      },
      "t3.2xlarge": {
        "Arch": "HVM64"
      },
      "t3a.micro": {
        "Arch": "HVM64"
      },
      "t3a.small": {
        "Arch": "HVM64"
      },
      "t3a.medium": {
        "Arch": "HVM64"
      },
      "t3a.large": {
        "Arch": "HVM64"
      },
      "t3a.xlarge": {
        "Arch": "HVM64"
      },
      "t3a.2xlarge": {
        "Arch": "HVM64"
      },
      "m1.small": {
        "Arch": "HVM64"
      },
      "m1.medium": {
        "Arch": "HVM64"
      },
      "m1.large": {
        "Arch": "HVM64"
      },
      "m1.xlarge": {
        "Arch": "HVM64"
      },
      "m2.xlarge": {
        "Arch": "HVM64"
      },
      "m2.2xlarge": {
        "Arch": "HVM64"
      },
      "m2.4xlarge": {
        "Arch": "HVM64"
      },
      "m3.medium": {
        "Arch": "HVM64"
      },
      "m3.large": {
        "Arch": "HVM64"
      },
      "m3.xlarge": {
        "Arch": "HVM64"
      },
      "m3.2xlarge": {
        "Arch": "HVM64"
      },
      "m4.large": {
        "Arch": "HVM64"
      },
      "m4.xlarge": {
        "Arch": "HVM64"
      },
      "m4.2xlarge": {
        "Arch": "HVM64"
      },
      "m4.4xlarge": {
        "Arch": "HVM64"
      },
      "m4.10xlarge": {
        "Arch": "HVM64"
      }
    },
    "AWSRegion2AZ": {
      "ap-northeast-1": {
        "AZ0": "0",
        "AZ1": "1",
        "AZ2": "0",
        "EFSSupport": "no",
        "LambdaSupport": "yes",
        "Name": "Tokyo",
        "NumAZs": "2"
      },
      "ap-northeast-2": {
        "AZ0": "0",
        "AZ1": "1",
        "AZ2": "0",
        "EFSSupport": "no",
        "LambdaSupport": "yes",
        "Name": "Seoul",
        "NumAZs": "2"
      },
      "ap-south-1": {
        "AZ0": "0",
        "AZ1": "1",
        "AZ2": "0",
        "EFSSupport": "no",
        "LambdaSupport": "yes",
        "Name": "Mumbai",
        "NumAZs": "2"
      },
      "ap-southeast-1": {
        "AZ0": "0",
        "AZ1": "1",
        "AZ2": "0",
        "EFSSupport": "no",
        "LambdaSupport": "yes",
        "Name": "Singapore",
        "NumAZs": "2"
      },
      "ap-southeast-2": {
        "AZ0": "0",
        "AZ1": "1",
        "AZ2": "2",
        "EFSSupport": "yes",
        "LambdaSupport": "yes",
        "Name": "Sydney",
        "NumAZs": "3"
      },
      "ca-central-1": {
        "AZ0": "0",
        "AZ1": "1",
        "AZ2": "0",
        "EFSSupport": "no",
        "LambdaSupport": "no",
        "Name": "Central",
        "NumAZs": "2"
      },
      "eu-central-1": {
        "AZ0": "0",
        "AZ1": "1",
        "AZ2": "2",
        "EFSSupport": "yes",
        "LambdaSupport": "yes",
        "Name": "Frankfurt",
        "NumAZs": "3"
      },
      "eu-west-1": {
        "AZ0": "0",
        "AZ1": "1",
        "AZ2": "2",
        "EFSSupport": "yes",
        "LambdaSupport": "yes",
        "Name": "Ireland",
        "NumAZs": "3"
      },
      "eu-west-2": {
        "AZ0": "0",
        "AZ1": "1",
        "AZ2": "0",
        "EFSSupport": "no",
        "LambdaSupport": "yes",
        "Name": "London",
        "NumAZs": "2"
      },
      "sa-east-1": {
        "AZ0": "0",
        "AZ1": "1",
        "AZ2": "0",
        "EFSSupport": "no",
        "LambdaSupport": "no",
        "Name": "Sao Paulo",
        "NumAZs": "2"
      },
      "us-east-1": {
        "AZ0": "0",
        "AZ1": "1",
        "AZ2": "2",
        "EFSSupport": "yes",
        "LambdaSupport": "yes",
        "Name": "N. Virgina",
        "NumAZs": "4"
      },
      "us-east-2": {
        "AZ0": "0",
        "AZ1": "1",
        "AZ2": "2",
        "EFSSupport": "yes",
        "LambdaSupport": "yes",
        "Name": "Ohio",
        "NumAZs": "3"
      },
      "us-gov-west-1": {
        "AZ0": "0",
        "AZ1": "1",
        "AZ2": "0",
        "EFSSupport": "no",
        "LambdaSupport": "no",
        "Name": "GovCloud",
        "NumAZs": "2"
      },
      "us-west-1": {
        "AZ0": "0",
        "AZ1": "1",
        "AZ2": "0",
        "EFSSupport": "no",
        "LambdaSupport": "yes",
        "Name": "N. California",
        "NumAZs": "2"
      },
      "us-west-2": {
        "AZ0": "0",
        "AZ1": "1",
        "AZ2": "2",
        "EFSSupport": "yes",
        "LambdaSupport": "yes",
        "Name": "Oregon",
        "NumAZs": "3"
      }
    },
    "AWSRegionArch2AMI": {
      "us-east-1": {
        "HVM64": "ami-0d5ae5525eb033d0a",
        "HVMG2": "NOT_SUPPORTED"
      },
      "us-east-2": {
        "HVM64": "ami-0a7f2b5b6b87eaa1b",
        "HVMG2": "NOT_SUPPORTED"
      },
      "us-west-2": {
        "HVM64": "ami-09c6723c6c24250c9",
        "HVMG2": "NOT_SUPPORTED"
      },
      "us-west-1": {
        "HVM64": "ami-00a3e4424e9ab3e56",
        "HVMG2": "NOT_SUPPORTED"
      },
      "eu-west-1": {
        "HVM64": "ami-0e41581acd7dedd99",
        "HVMG2": "NOT_SUPPORTED"
      },
      "eu-west-2": {
        "HVM64": "ami-00f94dc949fea2adf",
        "HVMG2": "NOT_SUPPORTED"
      },
      "eu-west-3": {
        "HVM64": "ami-0df03c7641cf41947",
        "HVMG2": "NOT_SUPPORTED"
      },
      "eu-central-1": {
        "HVM64": "ami-040a1551f9c9d11ad",
        "HVMG2": "NOT_SUPPORTED"
      },
      "ap-northeast-1": {
        "HVM64": "ami-0d5db3e2a1b98ca94",
        "HVMG2": "NOT_SUPPORTED"
      },
      "ap-northeast-2": {
        "HVM64": "ami-0f4362c71ffaf7759",
        "HVMG2": "NOT_SUPPORTED"
      },
      "ap-northeast-3": {
        "HVM64": "ami-07672d9af3947230d",
        "HVMG2": "NOT_SUPPORTED"
      },
      "ap-southeast-1": {
        "HVM64": "ami-0c199cae95cea87f0",
        "HVMG2": "NOT_SUPPORTED"
      },
      "ap-southeast-2": {
        "HVM64": "ami-0c0483bc96aef8b2f",
        "HVMG2": "NOT_SUPPORTED"
      },
      "ap-south-1": {
        "HVM64": "ami-0237472cf337d9529",
        "HVMG2": "NOT_SUPPORTED"
      },
      "ca-central-1": {
        "HVM64": "ami-0dbe45195223e250b",
        "HVMG2": "NOT_SUPPORTED"
      },
      "sa-east-1": {
        "HVM64": "ami-0065a65613972a22a",
        "HVMG2": "NOT_SUPPORTED"
      },
      "cn-north-1": {
        "HVM64": "ami-01993b4213b4bffb5",
        "HVMG2": "NOT_SUPPORTED"
      },
      "cn-northwest-1": {
        "HVM64": "ami-01d4e30d4d4952d0f",
        "HVMG2": "NOT_SUPPORTED"
      }
    },
    "DockerEnvironment": {
      "version": {
        "HasDDC": "no",
        "addOn": "base",
        "channel": "stable",
        "docker": "18.09.9-ce"
      }
    },
    "VpcCidrs": {
      "pubsubnet1": {
        "cidr": "10.0.0.0/20"
      },
      "pubsubnet2": {
        "cidr": "10.0.16.0/20"
      },
      "pubsubnet3": {
        "cidr": "10.0.32.0/20"
      },
      "pubsubnet4": {
        "cidr": "10.0.48.0/20"
      },
      "vpc": {
        "cidr": "10.0.0.0/16"
      }
    }
  },
  "Outputs": {
    "URL": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "ManagerInstance1",
                "PublicIp"
              ]
            }
          ]
        ]
      },
      "Description": "ManagerInstance1 URL"
    },
    "VPCID": {
      "Description": "Use this as the VPC for configuring Private Hosted Zones",
      "Value": {
        "Ref": "Vpc"
      }
    }
  }
}